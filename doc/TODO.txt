# Todo list of ktap project

## Planed

- ktap Aggregations(based on associative array)
- rewrite timer interface
- documentation/manual update
- profile on all cpu in ktap(stack_profile.kp)
- perf scripts porting
- fedora/debian package: yum install ktap; apt-get install ktap
https://fedoraproject.org/wiki/Join_the_package_collection_maintainers
- ktap mainthread smp_affinity setting
- website: ktap.org
- support multi-cpus and target pid tracing
- support PMU profile
- hardware breakpoint tracing
- support ring buffer raw output
- safe printf arg mismatch handling
- memory resource management 
- read kernel memory by symbol
- improve printf performance
- call ktap script in while loop shell script issue
- splice io output
- kernel_string()/user_string()
- optimize tracepoints_histogram.kp, use perf event id as key index,
boost performance
- support thread local based variable/map, and percpu variables
- extendable ktap library interface
- grue mode support(change kernel in side effects mode)
- Just in time compiling?
- get function argument easily in ktap kprobe/uprobe  
- let ktap support stapsdt in userspace binary (for example: libc)
        (See: readelf -n /lib/libc.so.6)
        (http://sourceware.org/systemtap/wiki/AddingUserSpaceProbingToApps)
        (http://www.sourceware.org/ml/systemtap/2010-q3/msg00145.html)
        (EVENTDEF: trace "stapsdt:libc:setjmp"{ action } )
- add more selftest of ktap
- benchmark program for ktap
- ubacktrace()


## Completed

- backtrace() and print_stack()
- flame graph (stack profiling)
- support redirect output to file, ktap -o file
- only tracing on cpu: ktap -c cpu *.kp
- support ktap -b, show listing all bytecodes
- make ktap reentrant
- ARM support
- kprobe/uprobe support
- ktap -e "oneline scripting"
- sometimes cannot stop script
- eventdef should be parsed in compiler, not interpreter
- event based tracing infrastructure
- Drop ftrace.patch
- table stat showing
- ktap memory allocation
- per-cpu ktap_state for performance improvement
- x86-64 support
- ktapio problem in all event tracepoints opened
  (fixed by patch "relay: fix timer madness" merge)
- issue: trace_end function cannot print into ktapio
- change comments sytle to "#"
- backport to 3.4 kernel
- support paris(t) in table
- All tracepoints support
- Timer support
- function call speedup
- dumpstack support
- script argument support
- fast loading
- Interval timer probes fire periodicalle
- More built-in functions: Printing, Strings, Timestamps, Context
- fibonacci in ktap
- unified event probe interface
- kernel_version() base function call
- dead loop detaction
- test script for verification
- making ktap syntax more C like
- request mailing list: ktap@freelist.org


